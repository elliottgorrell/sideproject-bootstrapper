name: Infra PR
run-name: Running Infra code pre-merge cheks for ${{ github.actor }}'s PullRequest 🚀
on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "infra/**"
jobs:
  lint_and_tests:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "secret '${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}'"
      - name: Check out repository code
        uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}"
      - name: ⚙️ Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra
      - name: 🖌 Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: 🤖 Validating Terraform code
        id: validate
        run: terraform validate  -no-color
        working-directory: ./infra
      - name: 📖 Displaying the planned infra changes
        id: plan
        run: terraform plan  -no-color
        working-directory: ./infra
      - uses: actions/github-script@v6
        # Skip during local actions testing
        if: ${{ !env.ACT }}
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`infra\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
